{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an object with the key of topics and the value of an array of topic objects. The slug acts as a unique identifier.",
    "queries": "None required",
    "exampleResponse": {
      "topics": [{ "slug": "football", "description": "Footie!" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an object with the key of articles and the value of an array of article objects. The articles are sorted by date, in descending order.",
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "article_id": 1,
          "author": "weegembump",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6,
          "article_img_url": "url-goes-here"
        }
      ]
    }
  },
  "GET /api/articles?sort...": {
    "description": "... must take the form of column_name:order. The column_name pertains to columns in the articles table and the order can be asc (for ascending) or desc (for descending). The inputs are case insensitive. The return serves an object with the key of articles and the value of an array of article objects. Where no sorting parameters are provided, the articles are sorted by date, in descending order.",
    "exampleQuery": "GET /api/articles?sort=votes:asc",
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "article_id": 1,
          "author": "weegembump",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6,
          "article_img_url": "url-goes-here"
        },
        {
          "title": "Vote counts are increasing",
          "topic": "voting",
          "article_id": 4,
          "author": "weegembump",
          "created_at": "2019-06-10T15:49:13.341Z",
          "votes": 2,
          "comment_count": 3,
          "article_img_url": "url-goes-here"
        }
      ]
    }
  },
  "GET /api/articles?topic...": {
    "description": "... must take the form of '=topicName'. The topicName will be searched against all topics in the database and, if it exists as a valid entry, will attempt to filter the articles by that value. The inputs are case insensitive. The return serves an object with the key of articles and the value of an array of article objects which match the filter. Where no match is found for the filter, it returns an error of 404.",
    "exampleQuery": "GET /api/articles?topic=voting",
    "exampleResponse": {
      "articles": [
        {
          "title": "The case for digital 'Postal' votes",
          "topic": "voting",
          "article_id": 1,
          "author": "weegembump",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6,
          "article_img_url": "url-goes-here"
        },
        {
          "title": "Vote counts are increasing",
          "topic": "voting",
          "article_id": 4,
          "author": "weegembump",
          "created_at": "2019-06-10T15:49:13.341Z",
          "votes": 2,
          "comment_count": 3,
          "article_img_url": "url-goes-here"
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "serves an object with the key of article and the value of an article of article objects. The articles are sorted by date, in descending order.",
    "exampleResponse": {
      "article": {
        "title": "Seafood substitutions are increasing",
        "topic": "cooking",
        "article_id": 1,
        "author": "weegembump",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 0,
        "comment_count": 6,
        "article_img_url": "url-goes-here"
      }
    }
  },
  "PATCH /api/articles/:article_id": {
    "requiredInformation": {
      "inc_votes": 1000
    },
    "description": "The value for inc_votes can be both positive or negative (e.g. 1000 or -1000) and the total vote_count will alter by the amount provided (i.e. will not change TO the amount provided). A successful PATCH request will return the updated article, with the new number of votes ",
    "exampleResponse": {
      "article": {
        "title": "Seafood substitutions are increasing",
        "topic": "cooking",
        "article_id": 1,
        "author": "weegembump",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 1000,
        "comment_count": 6,
        "article_img_url": "url-goes-here"
      }
    },
    "GET /api/articles/:article_id/comments": {
      "description": "serves an object with the key of comments and the value of an of an array of comments for the given article_id. The articles are sorted by date, in descending order.",
      "exampleResponse": {
        "article": {
          "comment_id": 2,
          "article_id": 1,
          "author": "weegembump",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "body": "This is a comment about the article"
        }
      }
    },
    "DELETE /comments/:comment_id": {
      "description": "deletes the given comment where it exists, returning no response except a 204 status."
    },
    "POST /api/articles/:article_id/comments": {
      "requiredInformation": {
        "username": "The name of the user posting the comment",
        "body": "The comment body to be posted"
      },
      "description": "Posts a comment to the relevant article subject to tests being passed, returns the posted comment only.",
      "exampleResponse": {
        "body": "This is the comment"
      }
    }
  }
}
